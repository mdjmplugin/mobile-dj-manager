<?xml version="1.0"?>
<ruleset name="Mobile DJ Manager Coding Standards">
    <description>Apply WordPress Coding Standards to all core files.</description>

	<file>.</file>

    <!-- Directories and third party library exclusions -->
    <exclude-pattern>*/dev/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/local-config\.php</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/assets/libs/*</exclude-pattern>
    <exclude-pattern>*/includes/EDD_SL_Plugin_Updater.php</exclude-pattern>

	<!-- Scan .php files only -->
    <arg name="extensions" value="php"/>

    <!-- Show progress, show the error codes for each message (source). -->
    <arg value="ps"/>

    <!-- Strip the filepaths in reports down to the relevant bit. -->
	<arg name="basepath" value="./" />

	<!-- Check up to 8 files simultaneously. -->
	<arg name="parallel" value="8" />

	<!-- Set the minimum supported WP version for all sniff. -->
    <config name="minimum_supported_wp_version" value="5.3" />

    <!-- Check the code for PHP cross-version compatibility. -->
    <config name="testVersion" value="7.3-"/>
    <rule ref="PHPCompatibilityWP"/>

    <!-- Turns on the WordPress Standard -->
    <rule ref="WordPress">
        <exclude-pattern>*/js/*</exclude-pattern>
        <exclude name="Generic.Commenting" />
        <exclude name="Generic.PHP.DisallowShortOpenTag.EchoFound" />
        <exclude name="Generic.WhiteSpace.DisallowSpaceIndent.SpacesUsed" />
        <exclude name="PEAR.Functions.FunctionCallSignature.CloseBracketLine" />
        <exclude name="PEAR.Functions.FunctionCallSignature.ContentAfterOpenBracket" />
        <exclude name="PEAR.Functions.FunctionCallSignature.MultipleArguments" />
        <exclude name="PEAR.Functions.FunctionCallSignature.OpeningIndent" />
        <exclude name="Squiz.Commenting" />
        <exclude name="Squiz.WhiteSpace.SuperfluousWhitespace.EndLine" />
        <exclude name="WordPress.Files.FileName.InvalidClassFileName" />
        <exclude name="WordPress.Files.FileName.NotHyphenatedLowercase" />
        <exclude name="WordPress.NamingConventions.ValidFunctionName.MethodNameInvalid" />
        <exclude name="WordPress.NamingConventions.ValidHookName.UseUnderscores" />
        <exclude name="WordPress.Variables.GlobalVariables.OverrideProhibited" />
    </rule>

    <!-- wp_verify_nonce() handles casting on it's own and does not need extra overhead -->
    <rule ref="WordPress.Security.ValidatedSanitizedInput">
        <properties>
            <property name="customUnslashingSanitizingFunctions" type="array">
                <element value="wp_verify_nonce"/>
            </property>
        </properties>
    </rule>

    <!-- Verify that all gettext calls use the correct text domain. -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array" value="mdjm-paypal-standard" />
        </properties>
    </rule>

</ruleset>
